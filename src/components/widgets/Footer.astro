---
import { Icon } from 'astro-icon/components';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

export interface Props {
  socialLinks: Array<Link>;
  footNote?: string;
  theme?: string;
}

const { socialLinks = [], footNote = '', theme = 'light' } = Astro.props;
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t border-gray-200 dark:border-slate-800 not-prose']}>
  <div class="dark:bg-dark absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-slate-300 py-8 flex flex-col gap-6">
    <!-- NavegaciÃ³n -->
    <nav class="flex justify-center gap-8 text-sm font-medium">
      <a class="hover:text-blue-500 dark:hover:text-blue-400 transition" href="#top">Inicio</a>
      <a class="hover:text-blue-500 dark:hover:text-blue-400 transition" href="#eventos">Eventos</a>
    </nav>

    <div
      class="flex flex-col md:flex-row md:justify-between md:items-center gap-4 mt-6 border-t border-gray-200 dark:border-slate-700 pt-4"
    >
      <!-- RRSS -->
      {
        socialLinks.length > 0 && (
          <ul class="flex gap-4 justify-center md:justify-start">
            {socialLinks.map(({ ariaLabel, href, icon }) => (
              <li>
                <a
                  class="text-gray-600 dark:text-gray-400 hover:text-blue-500 dark:hover:text-blue-400 transition"
                  aria-label={ariaLabel}
                  href={href}
                >
                  {icon && <Icon name={icon} class="w-5 h-5" />}
                </a>
              </li>
            ))}
          </ul>
        )
      }

      <!-- Footnote -->
      {
        footNote && (
          <div class="text-sm text-gray-800 dark:text-gray-400 text-center md:text-right">
            <Fragment set:html={footNote} />
          </div>
        )
      }
    </div>
  </div>
</footer>
